/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as AuthenticatedImport } from "./routes/_authenticated";

// Create Virtual Routes

const AuthenticatedIndexLazyImport = createFileRoute("/_authenticated/")();

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
    id: "/_authenticated",
    getParentRoute: () => rootRoute,
} as any);

const AuthenticatedIndexLazyRoute = AuthenticatedIndexLazyImport.update({
    path: "/",
    getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
    import("./routes/_authenticated/index.lazy").then((d) => d.Route),
);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
    interface FileRoutesByPath {
        "/_authenticated": {
            id: "/_authenticated";
            path: "";
            fullPath: "";
            preLoaderRoute: typeof AuthenticatedImport;
            parentRoute: typeof rootRoute;
        };
        "/_authenticated/": {
            id: "/_authenticated/";
            path: "/";
            fullPath: "/";
            preLoaderRoute: typeof AuthenticatedIndexLazyImport;
            parentRoute: typeof AuthenticatedImport;
        };
    }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
    AuthenticatedIndexLazyRoute: typeof AuthenticatedIndexLazyRoute;
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
    AuthenticatedIndexLazyRoute: AuthenticatedIndexLazyRoute,
};

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
    AuthenticatedRouteChildren,
);

export interface FileRoutesByFullPath {
    "": typeof AuthenticatedRouteWithChildren;
    "/": typeof AuthenticatedIndexLazyRoute;
}

export interface FileRoutesByTo {
    "/": typeof AuthenticatedIndexLazyRoute;
}

export interface FileRoutesById {
    __root__: typeof rootRoute;
    "/_authenticated": typeof AuthenticatedRouteWithChildren;
    "/_authenticated/": typeof AuthenticatedIndexLazyRoute;
}

export interface FileRouteTypes {
    fileRoutesByFullPath: FileRoutesByFullPath;
    fullPaths: "" | "/";
    fileRoutesByTo: FileRoutesByTo;
    to: "/";
    id: "__root__" | "/_authenticated" | "/_authenticated/";
    fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
    AuthenticatedRoute: typeof AuthenticatedRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
    AuthenticatedRoute: AuthenticatedRouteWithChildren,
};

export const routeTree = rootRoute
    ._addFileChildren(rootRouteChildren)
    ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/"
      ]
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
